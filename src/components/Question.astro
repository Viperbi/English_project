---
const { questionText, options, questionNumber } = Astro.props;

let selectedOption = null;

const handleOptionClick = (index) => {
  selectedOption = index; // Met à jour l'option sélectionnée
};
---

<div class="container">
  <div class="Box">
    <div class="question">
      {questionText}
    </div>
    <div class="wrapper">
      {options.map((option, index) => (
        <div 
          key={index} 
          class={`option ${selectedOption === index ? 'active' : ''}`} 
          onClick={() => handleOptionClick(index)}>
          <p>{option}</p>
        </div>
      ))}
    </div>
    <button class="next-button">
        Passer à la prochaine question
      </button>
  </div>
</div>

<style scoped>
  .container {
  background-color: rgba(183, 223, 255, 0.2);
  border-radius: 30px;
  box-shadow: 0 4px 4px #082033;
  padding: 30px;
  width: 50%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  margin-bottom: 20px;
}

.Box {
  display: flex;
  flex-direction: column;
  gap: 20px;
  width: 100%;
}

.question {
  font-size: 24px;
  color: #082033;
  font-family: Verdana;
  font-weight: bold;
  text-align: center;
  padding-bottom: 15px;
}

.question-number {
  background-color: #082033;
  color: white;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 20px;
  font-weight: bold;
  margin-right: 10px;
}

.wrapper {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 40px;
  justify-content: center;
  align-items: center;
}

.wrapper > div {
  background-color: #2C2C2C;
  border-radius: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 70px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.wrapper > div:hover,
.wrapper > div:active {
  background-color: #708493;
}

.wrapper > div p {
  color: white;
  font-size: 18px;
  font-family: "Inter", sans-serif;
  font-weight: 400;
  margin: 20px;
}

.next-button {
  background-color: #708493;
  height: 50px;
  width: 60%;
  padding: 10px 20px;
  border-radius: 20px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  border: none;
  margin-top: 20px;
  color: white;
  font-size: 15px;
  font-family: Verdana;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-left: auto;
  margin-right: auto;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.25);
}

.next-button:hover {
  background-color: #444;
}

@media (max-width: 768px) {
  .container {
    width: 80%;
  }

  .Box {
    width: 100%;
  }

  .question {
    font-size: 20px;
  }

  .wrapper {
    grid-template-columns: 1fr;
    gap: 20px;
  }

  .next-button {
    width: 80%;
    height: 45px;
    font-size: 14px;
  }
}

@media (max-width: 480px) {
  .container {
    padding: 20px;
  }

  .question {
    font-size: 18px;
  }

  .wrapper > div p {
    font-size: 16px;
  }

  .next-button {
    width: 100%;
    height: 45px;
    font-size: 14px;
  }
}

</style>
